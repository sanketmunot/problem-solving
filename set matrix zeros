for every 0 occured set whole column and row 0 
https://leetcode.com/problems/set-matrix-zeroes/

class Solution(object):
    def setZeroes(self, matrix):
        n = len(matrix)
        row=[1]*n
        col=[1]*len(matrix[0])
        
        for i in range(n):
            for j in range(len(matrix[0])):
                if matrix[i][j]==0:
                    row[i]=0
                    col[j]=0
        
        for i in range(n):
            for j in range(len(matrix[0])):
                if row[i]==0 or col[j]==0:
                    matrix[i][j]=0
        
Time complexity: 2 * O(n2) -> O(n2)
since it a matrix and whole traversal needs n*m operations
there are 2 whole matrix traversal's

space complexity: n + m + 1 -> O(n+m)
n for storing rows, m for columns
